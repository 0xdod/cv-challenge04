name: Selective Docker Build & Push
"on":
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      services: "${{ steps.filter.outputs.services }}"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect changes in services
        id: filter
        run: |
          CHANGED_SERVICES=()

          microservices=(adservice cartservice checkoutservice currencyservice emailservice frontend loadgenerator paymentservice productcatalogservice recommendationservice shippingservice shoppingassistantservice)

          BEFORE_SHA=${{ github.event.before }}
          if [ "$BEFORE_SHA" = "0000000000000000000000000000000000000000" ]; then
            BEFORE_SHA=$(git rev-parse HEAD~1)
          fi

          for service in "${microservices[@]}" ; do
            if git diff --name-only "$BEFORE_SHA" ${{ github.sha }} | grep -q "^$service/"; then
              CHANGED_SERVICES+=("\"$service\"")
            fi
          done

          # If no changes detected, set CHANGED_SERVICES to all microservices
          if [ ${#CHANGED_SERVICES[@]} -eq 0 ]; then
            for service in "${microservices[@]}" ; do
              CHANGED_SERVICES+=("\"$service\"")
            done
          fi
          SERVICES_JSON="[$(IFS=,; echo "${CHANGED_SERVICES[*]}")]"
          echo "services=${SERVICES_JSON}" >> "$GITHUB_ENV"
          echo "services=${SERVICES_JSON}" >> "$GITHUB_OUTPUT"

      - name: Show detected services
        run: |
          echo "Changed services: ${{ env.services }}"

  build-and-push:
    name: Build and push docker image to registry
    needs: detect-changes
    if: "needs.detect-changes.outputs.services != '[]'"
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    strategy:
      matrix:
        service: "${{ fromJson(needs.detect-changes.outputs.services) }}"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: "${{ secrets.DOCKER_USERNAME }}"
          password: "${{ secrets.DOCKER_PASSWORD }}"
      - name: Build and push Docker image
        id: push
        env:
          DOCKERFILE_PATH: ${{ matrix.service == 'cartservice' && 'src/Dockerfile' || 'Dockerfile' }}
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: "src/${{ matrix.service }}"
          file: "src/${{ matrix.service }}/$DOCKERFILE_PATH"
          push: true
          tags: "0xdod/${{ matrix.service }}:${{ github.sha }}"
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: "docker.io/0xdod/${{ matrix.service }}:${{ github.sha }}"
          format: table
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: "docker.io/0xdod/${{ matrix.service }}"
          subject-digest: "${{ steps.push.outputs.digest }}"
          push-to-registry: true
